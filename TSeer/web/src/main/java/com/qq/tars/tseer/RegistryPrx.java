/**
 * Tencent is pleased to support the open source community by making Tseer available.
 *
 * Copyright (C) 2018 THL A29 Limited, a Tencent company. All rights reserved.
 * 
 * Licensed under the BSD 3-Clause License (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * https://opensource.org/licenses/BSD-3-Clause
 *
 * Unless required by applicable law or agreed to in writing, software distributed 
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.qq.tars.tseer;

import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.annotation.*;
import com.qq.tars.common.support.Holder;

@Servant
public interface RegistryPrx {
	/**
	 * 上传agent发布包到服务器
	 * 注意 :由于tars的发布包大小限制默认10MB，因此调用次接口时，如果发布包大于10MB，必须拆分包按顺序同步上传
	 * @param pushPkInfo, 待上传的数据流信息
	 * @param result, 失败信息
	 *
	 * @return 0,表示成功，<0:表示失败
	 */
	public int pushPackage(PushPackageInfo pushPkInfo, @TarsHolder Holder<String> result);
	/**
	 * 上传agent发布包到服务器
	 * 注意 :由于tars的发布包大小限制默认10MB，因此调用次接口时，如果发布包大于10MB，必须拆分包按顺序同步上传
	 * @param pushPkInfo, 待上传的数据流信息
	 * @param result, 失败信息
	 *
	 * @return 0,表示成功，<0:表示失败
	 */
	public int pushPackage(PushPackageInfo pushPkInfo, @TarsHolder Holder<String> result, @TarsContext java.util.Map<String, String> ctx);
	/**
	 * 上传agent发布包到服务器
	 * 注意 :由于tars的发布包大小限制默认10MB，因此调用次接口时，如果发布包大于10MB，必须拆分包按顺序同步上传
	 * @param pushPkInfo, 待上传的数据流信息
	 * @param result, 失败信息
	 *
	 * @return 0,表示成功，<0:表示失败
	 */
	public void async_pushPackage(@TarsCallback RegistryPrxCallback callback, PushPackageInfo pushPkInfo);
	/**
	 * 上传agent发布包到服务器
	 * 注意 :由于tars的发布包大小限制默认10MB，因此调用次接口时，如果发布包大于10MB，必须拆分包按顺序同步上传
	 * @param pushPkInfo, 待上传的数据流信息
	 * @param result, 失败信息
	 *
	 * @return 0,表示成功，<0:表示失败
	 */
	public void async_pushPackage(@TarsCallback RegistryPrxCallback callback, PushPackageInfo pushPkInfo, @TarsContext java.util.Map<String, String> ctx);
}
